{
	"info": {
		"_postman_id": "a240dd6d-5190-4e45-854e-c393ff9d789e",
		"name": "ISIS2603-Parcial2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25792967"
	},
	"item": [
		{
			"name": "Estudiante",
			"item": [
				{
					"name": "Crear estudiante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('numeroCedula');\r",
									"    pm.expect(responseData).to.have.property('nombre');\r",
									"    pm.expect(responseData).to.have.property('correo');\r",
									"    pm.expect(responseData).to.have.property('programa');\r",
									"    pm.expect(responseData).to.have.property('semestre');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numeroCedula\": 1000222333,\r\n    \"nombre\": \"Hari Seldon\",\r\n    \"correo\": \"hari.seldon@mail.com\",\r\n    \"programa\": \"Psicohistoria\",\r\n    \"semestre\": 6\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante"
							]
						},
						"description": "Crea un estudiante en el sistema con base en los atributos provistos."
					},
					"response": [
						{
							"name": "Crear estudiante",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"numeroCedula\": 1000222333,\r\n    \"nombre\": \"Hari Seldon\",\r\n    \"correo\": \"hari.seldon@mail.com\",\r\n    \"programa\": \"Psicohistoria\",\r\n    \"semestre\": 6\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/estudiante",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"estudiante"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\n    \"id\": 4,\n    \"numeroCedula\": 1000222333,\n    \"nombre\": \"Hari Seldon\",\n    \"correo\": \"hari.seldon@mail.com\",\n    \"programa\": \"Psicohistoria\",\n    \"semestre\": 6\n}"
						}
					]
				},
				{
					"name": "Crear estudiante (semestre demasiado alto)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400 when semestre is 11\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numeroCedula\": 1000222333,\r\n    \"nombre\": \"Hari Seldon\",\r\n    \"correo\": \"hari.seldon@mail.com\",\r\n    \"programa\": \"Psicohistoria\",\r\n    \"semestre\": 11\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante"
							]
						},
						"description": "El semestre no puede ser mayor a 10."
					},
					"response": []
				},
				{
					"name": "Crear estudiante (semestre demasiado bajo)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400 when semestre is 0\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numeroCedula\": 1000222333,\r\n    \"nombre\": \"Hari Seldon\",\r\n    \"correo\": \"hari.seldon@mail.com\",\r\n    \"programa\": \"Psicohistoria\",\r\n    \"semestre\": 0\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante"
							]
						},
						"description": "El semestre no puede ser menor a 1."
					},
					"response": []
				},
				{
					"name": "Crear estudiante (correo inválido)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400 when semestre is 0\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numeroCedula\": 1000222333,\r\n    \"nombre\": \"Hari Seldon\",\r\n    \"correo\": \"hari.seldon@mail\",\r\n    \"programa\": \"Psicohistoria\",\r\n    \"semestre\": 6\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante"
							]
						},
						"description": "El correo provisto tiene que ser válido."
					},
					"response": []
				},
				{
					"name": "Inscribir estudiante",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_PorInscribir}}/actividades/{{actividadId_Abierta}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_PorInscribir}}",
								"actividades",
								"{{actividadId_Abierta}}"
							]
						},
						"description": "Inscribe a un estudiante en una actividad siempre y cuándo esta esté abierta y tenga cupos disponibles."
					},
					"response": []
				},
				{
					"name": "Inscribir estudiante (actividad cerrada)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_PorInscribir}}/actividades/{{actividadId_Cerrada}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_PorInscribir}}",
								"actividades",
								"{{actividadId_Cerrada}}"
							]
						},
						"description": "No se puede inscribir a un estudiante a una actividad cerrada."
					},
					"response": []
				},
				{
					"name": "Inscribir estudiante (cupos agotados)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_PorInscribir}}/actividades/{{actividadId_Cerrada}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_PorInscribir}}",
								"actividades",
								"{{actividadId_Cerrada}}"
							]
						},
						"description": "No se puede inscribir a un estudiante a una actividad con cupos agotados."
					},
					"response": []
				},
				{
					"name": "Inscribir estudiante (estudiante ya inscrito)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_PorInscribir}}/actividades/{{actividadId_Cerrada}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_PorInscribir}}",
								"actividades",
								"{{actividadId_Cerrada}}"
							]
						},
						"description": "No se puede inscribir a un estudiante si este ya se encuentra inscrito a la actividad."
					},
					"response": []
				},
				{
					"name": "Inscribir estudiante (actividad inexistente)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_PorInscribir}}/actividades/{{actividadId_404}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_PorInscribir}}",
								"actividades",
								"{{actividadId_404}}"
							]
						},
						"description": "No se puede inscribir a un estudiante a una actividad inexistente."
					},
					"response": []
				},
				{
					"name": "Inscribir estudiante (estudiante inexistente)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_404}}/actividades/{{actividadId_Abierta}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_404}}",
								"actividades",
								"{{actividadId_Abierta}}"
							]
						},
						"description": "No se puede inscribir a un estudiante inexistente a una actividad."
					},
					"response": []
				},
				{
					"name": "Obtener estudiante por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('numeroCedula');\r",
									"    pm.expect(responseData).to.have.property('nombre');\r",
									"    pm.expect(responseData).to.have.property('correo');\r",
									"    pm.expect(responseData).to.have.property('programa');\r",
									"    pm.expect(responseData).to.have.property('semestre');\r",
									"    pm.expect(responseData).to.have.property('actividades');\r",
									"    pm.expect(responseData).to.have.property('resenas');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_Inscrito}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_Inscrito}}"
							]
						},
						"description": "Recupera el estudiante por su ID dentro del sistema."
					},
					"response": [
						{
							"name": "Obtener estudiante por ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/v1/estudiante/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"estudiante",
										"1"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"numeroCedula\": 1000222333,\r\n    \"nombre\": \"Hari Seldon\",\r\n    \"correo\": \"hari.seldon@mail.com\",\r\n    \"programa\": \"Psicohistoria\",\r\n    \"semestre\": 6,\r\n    \"resenas\": [],\r\n    \"actividades\": [\r\n        {\r\n            \"id\": 1,\r\n            \"titulo\": \"Plastilina Galáctica\",\r\n            \"fecha\": \"2100-11-30\",\r\n            \"cupoMaximo\": 2,\r\n            \"estado\": 0\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"titulo\": \"Artes Espaciales II\",\r\n            \"fecha\": \"2100-11-30\",\r\n            \"cupoMaximo\": 1,\r\n            \"estado\": 1\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"titulo\": \"Esgrima Marciana\",\r\n            \"fecha\": \"2100-11-30\",\r\n            \"cupoMaximo\": 1,\r\n            \"estado\": 2\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"titulo\": \"Bolirrana en Júpiter\",\r\n            \"fecha\": \"2100-11-30\",\r\n            \"cupoMaximo\": 1,\r\n            \"estado\": 0\r\n        }\r\n    ]\r\n}"
						}
					]
				},
				{
					"name": "Obtener estudiante por ID (inexistente)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/estudiante/{{estudianteId_404}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"estudiante",
								"{{estudianteId_404}}"
							]
						},
						"description": "No se puede obtener un estudiante por su ID si este no existe."
					},
					"response": []
				}
			],
			"description": "Contiene la funcionalidad asociada a los estudiantes de la Universidad."
		},
		{
			"name": "Reseñas",
			"item": [
				{
					"name": "Crear reseña",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('comentario');\r",
									"    pm.expect(responseData).to.have.property('calificacion');\r",
									"    pm.expect(responseData).to.have.property('fecha');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estudianteId\": {{estudianteId_Inscrito}},\r\n    \"actividadId\": {{actividadId_Finalizada}},\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"calificacion\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/resena",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"resena"
							]
						},
						"description": "Crea una reseña por parte del estudiante en la actividad dada."
					},
					"response": [
						{
							"name": "Crear reseña",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"estudianteId\": 1,\r\n    \"actividadId\": 3,\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"calificacion\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/resena",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"resena"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 2,\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"calificacion\": 5,\r\n    \"fecha\": \"2100-11-30\"\r\n}"
						}
					]
				},
				{
					"name": "Crear reseña (estudiante inexistente)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estudianteId\": {{estudianteId_404}},\r\n    \"actividadId\": {{actividadId_Finalizada}},\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"calificacion\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/resena",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"resena"
							]
						},
						"description": "No se puede crear una reseña con un estudiante inexistente."
					},
					"response": []
				},
				{
					"name": "Crear reseña (actividad inexistente)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estudianteId\": {{estudianteId_Inscrito}},\r\n    \"actividadId\": {{actividadId_404}},\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"calificacion\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/resena",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"resena"
							]
						},
						"description": "No se puede crear una reseña con una actividad inexistente."
					},
					"response": []
				},
				{
					"name": "Crear reseña (estudiante no inscrito)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estudianteId\": {{estudianteId_NoInscrito}},\r\n    \"actividadId\": {{actividadId_Finalizada}},\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"calificacion\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/resena",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"resena"
							]
						},
						"description": "No se puede crear una reseña con un estudiante que no estuvo inscrito en la actividad."
					},
					"response": []
				},
				{
					"name": "Crear reseña (actividad no finalizada)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estudianteId\": {{estudianteId_Inscrito}},\r\n    \"actividadId\": {{actividadId_Abierta}},\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"calificacion\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/resena",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"resena"
							]
						},
						"description": "No se puede crear una reseña para una actividad que todavía no ha finalizado."
					},
					"response": []
				},
				{
					"name": "Obtener reseña por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('comentario');\r",
									"    pm.expect(responseData).to.have.property('calificacion');\r",
									"    pm.expect(responseData).to.have.property('fecha');\r",
									"    pm.expect(responseData).to.have.property('estudiante');\r",
									"    pm.expect(responseData).to.have.property('actividad');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/resena/{{resenaId_Existente}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"resena",
								"{{resenaId_Existente}}"
							]
						},
						"description": "Obtiene una reseña por su ID."
					},
					"response": [
						{
							"name": "Obtener reseña por ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/v1/resena/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"resena",
										"1"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"comentario\": \"Estuvo excelente!\",\r\n    \"calificacion\": 5,\r\n    \"fecha\": \"2100-11-30\",\r\n    \"estudiante\": null,\r\n    \"actividad\": null\r\n}"
						}
					]
				}
			],
			"description": "Contiene la lógica asociada a las reseñas. Estas son creadas dentro de una actividad finalizada por un estudiante que estuvo inscrito en esta."
		},
		{
			"name": "Actividad",
			"item": [
				{
					"name": "Crear actividad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('titulo');\r",
									"    pm.expect(responseData).to.have.property('fecha');\r",
									"    pm.expect(responseData).to.have.property('cupoMaximo');\r",
									"    pm.expect(responseData).to.have.property('estado');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Plastilina Galáctica\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"cupoMaximo\": 5,\r\n    \"estado\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad"
							]
						},
						"description": "Crea una actividad con los atributos provistos."
					},
					"response": [
						{
							"name": "Crear actividad",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"titulo\": \"Plastilina Galáctica\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"cupoMaximo\": 5,\r\n    \"estado\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/actividad",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"actividad"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 5,\r\n    \"titulo\": \"Plastilina Galáctica\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"cupoMaximo\": 5,\r\n    \"estado\": 0\r\n}"
						}
					]
				},
				{
					"name": "Crear actividad (título muy corto)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Plastilina\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"cupoMaximo\": 5,\r\n    \"estado\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad"
							]
						},
						"description": "Si el título tiene menos de 15 caractéres, no se podrá crear la actividad."
					},
					"response": []
				},
				{
					"name": "Crear actividad (título contiene símbolos)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Plastilina & Artes Plásticas\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"cupoMaximo\": 5,\r\n    \"estado\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad"
							]
						},
						"description": "Si el título contiene símbolos distintos de signos de puntuación y caractéres blancos, no se podrá crear."
					},
					"response": []
				},
				{
					"name": "Obtener actividad por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData).to.have.property('id');\r",
									"    pm.expect(responseData).to.have.property('titulo');\r",
									"    pm.expect(responseData).to.have.property('fecha');\r",
									"    pm.expect(responseData).to.have.property('cupoMaximo');\r",
									"    pm.expect(responseData).to.have.property('estado');\r",
									"    pm.expect(responseData).to.have.property('estudiantes');\r",
									"    pm.expect(responseData).to.have.property('resenas');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad/{{actividadId_Abierta}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad",
								"{{actividadId_Abierta}}"
							]
						},
						"description": "Recupera una actividad por su ID."
					},
					"response": [
						{
							"name": "Obtener actividad por ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:3000/api/v1/actividad/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"actividad",
										"1"
									]
								}
							},
							"_postman_previewlanguage": "",
							"header": [],
							"cookie": [
								{
									"expires": "Invalid Date"
								}
							],
							"body": "{\r\n    \"id\": 1,\r\n    \"titulo\": \"Plastilina Galáctica\",\r\n    \"fecha\": \"2100-11-30\",\r\n    \"cupoMaximo\": 2,\r\n    \"estado\": 0,\r\n    \"estudiantes\": [\r\n        {\r\n            \"id\": 1,\r\n            \"numeroCedula\": 1000222333,\r\n            \"nombre\": \"Hari Seldon\",\r\n            \"correo\": \"hari.seldon@mail.com\",\r\n            \"programa\": \"Psicohistoria\",\r\n            \"semestre\": 6\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"numeroCedula\": 79123456,\r\n            \"nombre\": \"Gaal Dornick\",\r\n            \"correo\": \"gaal.dornick@outlook.com.du\",\r\n            \"programa\": \"Matemáticas\",\r\n            \"semestre\": 10\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"numeroCedula\": 51234698,\r\n            \"nombre\": \"Salvor Hardin\",\r\n            \"correo\": \"hardin_salvor@gmail.com.co\",\r\n            \"programa\": \"Gobierno\",\r\n            \"semestre\": 1\r\n        }\r\n    ],\r\n    \"resenas\": []\r\n}"
						}
					]
				},
				{
					"name": "Obtener actividad por ID (inexistente)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad/{{actividadId_404}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad",
								"{{actividadId_404}}"
							]
						},
						"description": "No se puede recuperar una actividad por ID si esta no existe."
					},
					"response": []
				},
				{
					"name": "Obtener actividades por fecha",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response has the required fields\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('array').and.to.have.lengthOf.above(0);\r",
									"    \r",
									"    responseData.forEach((element) => {\r",
									"        pm.expect(element).to.have.property('id');\r",
									"        pm.expect(element).to.have.property('titulo');\r",
									"        pm.expect(element).to.have.property('fecha');\r",
									"        pm.expect(element).to.have.property('cupoMaximo');\r",
									"        pm.expect(element).to.have.property('estado');\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad?fecha={{fechaActividad_Abierta}}",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad"
							],
							"query": [
								{
									"key": "fecha",
									"value": "{{fechaActividad_Abierta}}"
								}
							]
						},
						"description": "Recupera una lista de todas las actividades que hayan sucedido en la fecha dada."
					},
					"response": []
				},
				{
					"name": "Cambiar estado de actividad - abierta a abierta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estado\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad/{{actividadId_Abierta}}/estado",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad",
								"{{actividadId_Abierta}}",
								"estado"
							]
						},
						"description": "No se puede cambiar una actividad a abierta si esta ya está abierta."
					},
					"response": []
				},
				{
					"name": "Cambiar estado de actividad - cerrada a cerrada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estado\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad/{{actividadId_Cerrada}}/estado",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad",
								"{{actividadId_Cerrada}}",
								"estado"
							]
						},
						"description": "No se puede cambiar una actividad a cerrada si esta ya está cerrada."
					},
					"response": []
				},
				{
					"name": "Cambiar estado de actividad - finalizada a finalizada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estado\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad/{{actividadId_Finalizada}}/estado",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad",
								"{{actividadId_Finalizada}}",
								"estado"
							]
						},
						"description": "No se puede cambiar una actividad a finalizada si esta ya está finalizada."
					},
					"response": []
				},
				{
					"name": "Cambiar estado de actividad - abierta a cerrada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estado\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad/{{actividadId_Abierta}}/estado",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad",
								"{{actividadId_Abierta}}",
								"estado"
							]
						},
						"description": "Cambia el estado de una actividad abierta a cerrada"
					},
					"response": []
				},
				{
					"name": "Cambiar estado de actividad - cerrada a finalizada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estado\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{ip}}:{{port}}/api/v1/actividad/{{actividadId_Cerrada}}/estado",
							"protocol": "http",
							"host": [
								"{{ip}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"v1",
								"actividad",
								"{{actividadId_Cerrada}}",
								"estado"
							]
						},
						"description": "Cambia el estado de una actividad cerrada a finalizada."
					},
					"response": []
				}
			],
			"description": "Contiene toda la lógica asociada a las actividades organizadas por la universidad."
		}
	]
}